
Data Loading statments:
=======================

1.load data into table from local system:
=========================================

load data local inpath '/home/cloudera/Data/employee.txt' into table employee;

load data local inpath '' into table employee

2.overwrite existing table data from local system :
===================================================

load data local inpath '/home/cloudera/Data/employee.txt' overwrite into table employee;



3.moving data from local to hdfs:
=================================

hdfs dfs -copyFromLocal employee.txt /user/cloudera/Data/
hdfs dfs -put employee.txt /user/cloudera/Data/



4.load data into table from hdfs:
=================================
load data inpath '/user/cloudera/Data/employee.txt' into table employee;



5.overwrite existing table data from hdfs:
==========================================
load data inpath '/home/cloudera/Data/employee.txt' overwrite into table employee;



6.Select Query:
===============
select * from employee;



7.Details of table:
===================
describe employee;

describe formatted employee;



Alter statments:
================
8.Rename table:
===============
alter table <table-name> rename to <new-table-name>;

alter table employee rename to emp ;


9.add new columns to table:
===========================

alter table <table-name> add columns <(column-name ,datatype)> ;

alter table emp add columns (city varchar(20));
alter table emp add columns (location varchar(20));



10.drop table column:
=====================

can't drop column in hive table.



11.change position of columns:
==============================
alter table <table-name> change <column-name> <column-name datatype> after <column-name> ;

alter table emp change column job job varchar(20) after location;



12.change name of column:
=========================

alter table <table-name> change column <column-name> <new column-name datatype> ;

alter table emp change column employee_id emp_id int ;



13.change DataType of column:
=============================
alter table emp change column emp_id emp_id varchar(20) ;



13.Create new table from old table with sechema and data:
=========================================================

create table new as select * from emp;



14.Create new table from old table with sechema and without data:
=================================================================
create table updated_emp like employee;
create table update as select * from employee where 1=2; #trigger map reduce job



15. drop table:
===============

drop table emp;



16. truncate table:
===================

truncate table new ;



17.limit:
=========
select * from employee limit 5;



7.order by :
----------
select * from employee order by salary;



8.sort by :
----------
select * from employee sort by salary;



9.group by:
---------

select sum(salary),dept from employee group by dept;



10.Inner join :
----------------

select employee.* ,dept.* 
from employee 
join dept
on employee.empid = dept.deptid ;



11.left join :
----------------

select employee.* ,dept.*
from employee
left join dept 
on employee.empid = dept.deptid ;



12.right join:
--------------

select employee.* ,dept.*
from employee
right join dept 
on employee.empid = dept.deptid ;



13.full join:
--------------

select employee.* ,dept.*
from employee
full join dept
on employee.empid = dept.deptid ;



14.Hive Incremental Load:
=========================

create table temp as
select t2.id,t2.firstname,t2.lastname,t2.updated_date
from ( select *,row_number() over(partition by id order by updated_date desc)rn
from ( select * from day1
union all
select * from day2)
t1)t2
where rn =1;



overwrite table with another table:
------------------------------------
insert overwrite table day1 select * from temp;

drop:
-----

drop table temp;



15.create external partition table:
===================================

create external table employee_parti(
emp_id int,
name varchar(20),
manager_id int,
hire_date varchar(20),
salary int,
deptno int,
updated_date varchar(20))
partitioned by (job varchar(20))
location '/user/hive/External/employee_parti';



16. load data in partition table:
=================================
set hive.exec.dynamic.partition.mode=nonstrict;
insert into table employee_parti partition(job) select * from employee;
insert overwrite table employee_parti partition(job) select * from employee;



17.show partition of a table:
=============================
show partitions employee_parti;



18.Bucketing table:
===================
create external table employee_buck(
emp_id int,
name varchar(20),
manager_id int,
hire_date varchar(20),
salary int,
deptno int,
updated_date varchar(20),
job varchar(20))
clustered by (job) into 5 buckets
location '/user/hive/External/employee_buck';


19. load data in bucketing table:
=================================
set hive.enforce.bucketing = true;

insert into table employee_buck select * from employee;



20.window/Analitical functions:
===============================

row_number():
=============
select *,row_number() over(order by salary desc) rn from employee;


rank():
=======
select *,rank() over(order by salary desc)rk from employee;


dense_rank():
=============
select *,dense_rank() over(order by salary desc) from employee;


